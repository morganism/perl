package Ascertain::UM::VFI::Format::AMA;

use Data::Dumper;
use constant TRUE => 1;
use constant FALSE => undef;

use vars qw(@ISA);
our @ISA = qw(Ascertain::UM::VFI::Format);


#--- !!!!!!!!!!!! Just a hust to be replaced

sub init
{
	my $self = shift;

	$self->{type} = 'ama'; # ama csv fixedwidth asn1
	#$self->{has_header} = TRUE;
	#$self->{skip_header_lines} = 1;
	#$self->{header_regex} = qr/^$/;
	#$self->{trim_values} = TRUE;
	#$self->{has_trailer} = TRUE;
	#$self->{trailer_regex} = qr/^$/;
	#$self->{currency_factor} = 100; # if in euros then 100, if in cents then 1
	#$self->{data_factor} = 1; # if in MB then 1048576, if in bytes then 1

	# NOTE : This format MUST defineone of the following in the individual formats below:
	#   "decode => '<method name>'"
	#   "template => '<unpack template>'"
	#
	#	"decode" is has precedence
	#   if either "decode" or "template" is not defined the template 'H*' will be used



=top
Sequence Number	4	"Valid values range from 0..999,999. Onc999,999 has been reached then the numberrolls over to 0 for the next record."
Block Size	2	"This is the block size fixed by the eCSplatform."
Records	1	"Number of AMA records contained in acompleted AMA data block."
Flag	1	"Contains information about the nature of theblock. For example whether the blockcontains primary data or secondary data."
Time 	4	Time the block is written to disk.
AMA Sequence Number	2	Not used in current implementations.
=cut
	$BLOCK_HEADER =
	[
		{name => 'SEQUENCE_NUMBER', bytes  => 4, template => 'N'},
		{name => 'BLOCK_SIZE', bytes => 2, template => 'n'},
		{name => 'RECORDS', bytes => 1, template => 'c'},
		{name => 'FLAG', bytes => 1, decode => 'bcd2num'},
		{name => 'TIME', bytes => 4, decode => 'bcd2num'},
		{name => 'AMA_SEQUENCE_NUMBER', bytes => 2, decode => 'bcd2num'},
	];

=top
Record Description Word (RDW)	4	The first two bytes of the RDW contain the length of the AMA record including the RDW. The second two bytes are zeros. (e.g. .005A 0000. signifies a 90 byte record)
Hex Identifier	1	The hex-ID has two hexadecimal characters. The first character is always .A.. The second character is .a. in normal operation. .b. if there is an error in any of the data fields (e.g. .AA. is normally found) In the real records there is often the string .ab.. because SurePay pads a lot of fields with .F.s to accommodate the specific format of dialled digits for instance. According to the standards this is an error and is referenced as such by a .d. at the end of the field. .AB. in the Hex-Id means there are errors in the records and the .d. at the end of a field specifies which fields contains errors. In the field, these are not real errors but just format errors caused by the padding.
Structure Code	3	"The structure code consists of six hexadecimal characteristics. The structure code determines which data fields are present in a record. All defined datfields must be filled for each record. (e.g. .0904 2C. is the structure code for a primary tracer record). From V10.0, fixed long format 2 uses the structurecode .05000C., fixed long format 1 use structure code .05003C.. Fixed short format records use structure code '05001C'. Dynamirom V10SU4, a new AMA format . Account AMAformat is defined. Account AMA record will use structure code .05004C.. From R27.4, a new AMA format . External Subscriber AMA formate is defined. External Subscriber AMA record generated on"
Call Type	2	Valid call type codes are defined in the Telcordia standards. Only certain generated by an SPA. Common values for sensor types are found in the Telcordia standards. The contents of this field are ofno significance for SurePay.
Sensor Type	2	The sensor type represents the kind of sensor that is outputting AMA records. This field is suppressed when AMA records are generated by an SPA. Common values for sensor types are found in the Telcordia standards. The contents of this field are ofno significance for SurePay.
Sensor Identification	4	The sensor id is the identifier for the individual sensor. eCS administrators assign the number. (e.g. .0000 000C. is the default sensor id). The contents of this field are of no significance for SurePay.
Recording Office Type	2	In the eCS, the recording office type is the same as the sensor type. The contents of this field are of no significance for SurePay.
Recording Office Identification	4	In the eCS, the recording office id is the same as the sensor id. The contents of this field are of no significance for SurePay.
=cut
	# note: The following HEADER fields have been moved to the record for convenience in aggregation.
        #{name => 'HEX_IDENTIFIER', bytes => 1},
        #{name => 'STRUCTURE_CODE', bytes => 3},
        #{name => 'CALL_TYPE', bytes => 2},
        #{name => 'SENSOR_TYPE', bytes => 2},
        #{name => 'SENSOR_IDENTIFICATION', bytes => 4},
        #{name => 'RECORDING_OFFICE_TYPE', bytes => 2},
        #{name => 'RECORDING_OFFICE_IDENTIFICATION', bytes => 4},
	$RECORD_HEADER =
	[
		{name => 'RECORD_DESCRIPTOR_WORD', bytes => 2, template => 'n'},
		{name => 'RECORD_DESCRIPTOR_WORD_JUNK', bytes => 2, decode => 'bcd2num'}
	];


	$CDR =
	[
		{name => 'HEX_IDENTIFIER', bytes => 1, decode => 'bcd2num'},
		{name => 'STRUCTURE_CODE', bytes => 3, decode => 'bcd2num'},
		{name => 'CALL_TYPE', bytes => 2, decode => 'bcd2num'},
		{name => 'SENSOR_TYPE', bytes => 2, decode => 'bcd2num'},
		{name => 'SENSOR_IDENTIFICATION', bytes => 4, decode => 'bcd2num'},
		{name => 'RECORDING_OFFICE_TYPE', bytes => 2, decode => 'bcd2num'},
		{name => 'RECORDING_OFFICE_IDENTIFICATION', bytes => 4, decode => 'bcd2num'},
		{name => 'ACCOUNT_ID', bytes => 8, decode => 'bcd2num'},
		{name => 'CLASS_OF_SERVICE_CODE', bytes => 3, decode => 'bcd2num'},
		{name => 'GENERATION_TIMESTAMP', bytes => 6, decode => 'timestamp2date'},
		{name => 'EVENT_LABEL', bytes => 2, decode => 'bcd2num'},
		{name => 'EVENT_RESULT', bytes => 2, decode => 'bcd2num'},
		{name => 'LOCATION_INFO_TYPE', bytes => 1, decode => 'bcd2num'},
		{name => 'IMSI_OVERFLOW', bytes => 8, decode => 'bcd2num'},
		{name => 'IMSI', bytes => 5, decode => 'bcd2num'},
		{name => 'DIAL_ZONE_PLAN_CODE', bytes => 3, decode => 'bcd2num'},
		{name => 'PRE_EVENT_PRIMARY_BAL', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_EVENT_PRIMARY_BAL', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_EVENT_SIM_STATE_CODE', bytes => 3, decode => 'bcd2num'},
		{name => 'POST_EVENT_SIM_STATE_CODE', bytes => 3, decode => 'bcd2num'},
		{name => 'EXTENDED_DAY_OF_WEEK', bytes => 2, decode => 'bcd2num'},
		{name => 'TIME_RANGE_1_8', bytes => 1, decode => 'bcd2num'},
		{name => 'INITIAL_TARIFF_RATE', bytes => 3, decode => 'bcd2num'},
		{name => 'N_SECONDS_FREE', bytes => 3, decode => 'bcd2num'},
		{name => 'ORIGINATING_ZONE_CODE', bytes => 5, decode => 'bcd2num'},
		{name => 'DESTINATION_ZONE_CODE', bytes => 5, decode => 'bcd2num'},
		{name => 'DIALLED_DIGITS_OVERFLOW', bytes => 8, decode => 'bcd2num'},
		{name => 'DIALLED_DIGITS', bytes => 5, decode => 'bcd2num'},
		{name => 'CALL_DURATION', bytes => 3, decode => 'bcd2num'},
		{name => 'CALL_COST', bytes => 6, decode => 'bcd2num'},
		{name => 'ADDITIONAL_CHARGES', bytes => 6, decode => 'bcd2num'},
		{name => 'BEARER_CAPABILITY_CODE', bytes => 2, decode => 'bcd2num'},
		{name => 'OLD_CLASS_OF_SERVICE_CODE', bytes => 3, decode => 'bcd2num'},
		{name => 'REASON_CODE_1', bytes => 7, decode => 'bcd2num'},
		{name => 'REASON_CODE_2', bytes => 7, decode => 'bcd2num'},
		{name => 'REASON_CODE_3', bytes => 7, decode => 'bcd2num'},
		{name => 'CALL_START_TIME', bytes => 6, decode => 'timestamp2date'},
		{name => 'TARIFF_PLAN_COSP_ID', bytes => 8, decode => 'bcd2num'},
		{name => 'ROUNDED_CALL_DURATION', bytes => 3, decode => 'bcd2num'},
		{name => 'PRE_POST_PAID_CALL', bytes => 1, decode => 'bcd2num'},
		{name => 'CDR_REFERENCE_NUMBER', bytes => 6, decode => 'bcd2num'},
		{name => 'CHARGE_FORMAT', bytes => 1, decode => 'bcd2num'},
		{name => 'REFERENCE_DATA_1', bytes => 6, decode => 'bcd2num'},
		{name => 'REFERENCE_DATA_2', bytes => 6, decode => 'bcd2num'},
		{name => 'REFERENCE_DATA_3', bytes => 6, decode => 'bcd2num'},
		{name => 'REFERENCE_DATA_4', bytes => 6, decode => 'bcd2num'},
		{name => 'CALL_COST_PRIMARY_TARIFF', bytes => 6, decode => 'bcd2num'},
		{name => 'PROMOTIONAL_TARIFF_PLAN_STATUS', bytes => 1, decode => 'bcd2num'},
		{name => 'PTP_COSP_AMA_CODE', bytes => 3, decode => 'bcd2num'},
		{name => 'CALL_VOLUME', bytes => 8, decode => 'bcd2num'},
		{name => 'TIME_CODE', bytes => 3, decode => 'bcd2num'},
		{name => 'NUM_CALLS_IN_PROGRESS', bytes => 2, decode => 'bcd2num'},
		{name => 'AMA_VERSION', bytes => 2, decode => 'bcd2num'},
		{name => 'CONTENT_TYPE', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_CUC_COUNTER_1', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_CUC_COUNTER_1', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_CUC_COUNTER_2', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_CUC_COUNTER_2', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_CUC_COUNTER_3', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_CUC_COUNTER_3', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_CUC_COUNTER_4', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_CUC_COUNTER_4', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_CUC_COUNTER_5', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_CUC_COUNTER_5', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_CUC_COUNTER_6', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_CUC_COUNTER_6', bytes => 6, decode => 'bcd2num'},
		{name => 'COUNTER_STATUS', bytes => 4, decode => 'bcd2num'},
		{name => 'CALL_START_TIME_TIMEZONE', bytes => 2, decode => 'bcd2num'},
		{name => 'GENERATION_TIMESTAMP_TIMEZONE', bytes => 2, decode => 'bcd2num'},
		{name => 'SCP_ID', bytes => 8, decode => 'bcd2num'},
		{name => 'SCP_NUMBER_OVERFLOW', bytes => 1, decode => 'bcd2num'},
		{name => 'PRE_CALL_EBUCKET_VALUE1', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_EBUCKET_VALUE1', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_EBUCKET_VALUE2', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_EBUCKET_VALUE2', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_EBUCKET_VALUE3', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_EBUCKET_VALUE3', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_EBUCKET_VALUE4', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_EBUCKET_VALUE4', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_EBUCKET_VALUE5', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_EBUCKET_VALUE5', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_EBUCKET_VALUE6', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_EBUCKET_VALUE6', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_EBUCKET_VALUE7', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_EBUCKET_VALUE7', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_EBUCKET_VALUE8', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_EBUCKET_VALUE8', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_EBUCKET_VALUE9', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_EBUCKET_VALUE9', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_CALL_EBUCKET_VALUE10', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_CALL_EBUCKET_VALUE10', bytes => 6, decode => 'bcd2num'},
		{name => 'ENHANCED_LOCATION_INFORMATION', bytes => 18, decode => 'ebcdic2ascii'},
		{name => 'N_FREE_BYTES', bytes => 6, decode => 'bcd2num'},
		{name => 'UBD_AMA_CODE', bytes => 6, decode => 'bcd2num'},
		{name => 'COUNTER_INDICATOR', bytes => 4, decode => 'bcd2num'},
		{name => 'QOS_RANGE_LABEL', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'PS_DATA_CALL_ACCESS_TYPE', bytes => 1, decode => 'bcd2num'},
		{name => 'GGSN_ADDRESS', bytes => 39, decode => 'ebcdic2ascii'},
		{name => 'CHARGING_ID', bytes => 10, decode => 'ebcdic2ascii'},
		{name => 'DEFAULT_TARIFF_PLAN_AMA_COSP_CODE', bytes => 8, decode => 'bcd2num'},
		{name => 'AMA_VALIDITY_PERIOD', bytes => 6, decode => 'timestamp2date'},
		{name => 'DISCOUNT_IDS', bytes => 30, decode => 'ebcdic2ascii'},
		{name => 'COUNTER_INDICATOR_OVERFLOW', bytes => 3, decode => 'bcd2num'},
		{name => 'COUNTER_STATUS_OVERFLOW', bytes => 3, decode => 'bcd2num'},
		{name => 'TOTAL_USED_FREE_UNITS', bytes => 6, decode => 'bcd2num'},
		{name => 'TOTAL_USED_FREE_SECONDS', bytes => 6, decode => 'bcd2num'},
		{name => 'TOTAL_USED_FREE_BYTES', bytes => 6, decode => 'bcd2num'},
		{name => 'FEATURE_PACKAGE_ID', bytes => 15, decode => 'ebcdic2ascii'},
		{name => 'MULTIPLE_AMA_SEQUENCE_NUMBER', bytes => 2, decode => 'bcd2num'},
		{name => 'PRE_EVENT_PRIMARY_OC', bytes => 6, decode => 'bcd2num'},
		{name => 'PRE_EVENT_SECONDARY_OC', bytes => 6, decode => 'bcd2num'},
		{name => 'DIAMETER_SESSION_ID_IDENTITY', bytes => 32, decode => 'ebcdic2ascii'},
		{name => 'DIAMETER_SESSION_ID_HIGH32', bytes => 6, decode => 'bcd2num'},
		{name => 'DIAMETER_SESSION_ID_LOW32', bytes => 6, decode => 'bcd2num'},
		{name => 'ORIGIN_HOST', bytes => 32, decode => 'ebcdic2ascii'},
		{name => 'SERVICE_IDENTIFIER', bytes => 32, decode => 'ebcdic2ascii'},
		{name => 'GROSS_CALL_COST', bytes => 6, decode => 'bcd2num'},
		{name => 'NET_DIRECT_CALL_COST', bytes => 6, decode => 'bcd2num'},
		{name => 'PS_TRAFFIC_CATEGORY_ID', bytes => 6, decode => 'bcd2num'},
		{name => 'PS_TRAFFIC_RULEBASE_ID', bytes => 8, decode => 'ebcdic2ascii'},
		{name => 'SERVING_SGSN_IP_ADDRESS', bytes => 39, decode => 'ebcdic2ascii'},
		{name => 'ENHANCED_REFERENCE', bytes => 40, decode => 'ebcdic2ascii'},
		{name => 'APPLIED_DISCOUNT_IDS', bytes => 30, decode => 'ebcdic2ascii'},
		{name => 'PROMOTION_TARIFF_PLAN_START_DATE', bytes => 5, decode => 'bcd2num'},
		{name => 'PROMOTION_TARIFF_PLAN_END_DATE', bytes => 5, decode => 'bcd2num'},
		{name => 'BUNDLE_USAGE_INDICATOR', bytes => 3, decode => 'bcd2num'},
		{name => 'SERVICE_SPECIFIC_DATA_2', bytes => 30, decode => 'ebcdic2ascii'},
		{name => 'SERVICE_SPECIFIC_DATA_3', bytes => 100, decode => 'ebcdic2ascii'},
		{name => 'SERVICE_SPECIFIC_DATA_4', bytes => 100, decode => 'ebcdic2ascii'},
		{name => 'ENHANCED_CALL_REFERENCE', bytes => 64, decode => 'ebcdic2ascii'},
		{name => 'PDP_DURATION', bytes => 4, decode => 'bcd2num'},
		{name => 'PDP_CLOSURE_STATUS', bytes => 1, decode => 'bcd2num'},
		{name => 'AMA_EVENT_COUNTER', bytes => 2, decode => 'bcd2num'},
		{name => 'GROUP_1_ID', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'GROUP_1_ATTRIBUTE', bytes => 1, decode => 'bcd2num'},
		{name => 'COUNTER_RTDB_INFORMATION_INDICATOR', bytes => 1, decode => 'bcd2num'},
		{name => 'DISCOUNT_PERCENTAGE', bytes => 3, decode => 'bcd2num'},
		{name => 'VOLUME_BUCKET_MEASUREMENT_INDICATOR', bytes => 6, decode => 'bcd2num'},
		{name => 'SERVICE_DATA_1', bytes => 6, decode => 'bcd2num'},
		{name => 'SERVICE_DATA_2', bytes => 6, decode => 'bcd2num'},
		{name => 'SERVICE_DATA_3', bytes => 6, decode => 'bcd2num'},
		{name => 'SERVICE_DATA_4', bytes => 6, decode => 'bcd2num'},
		{name => 'SERVICE_TIMESTAMP', bytes => 6, decode => 'timestamp2date'},
		{name => 'PROMOTIONAL_TARIFF_PLAN_START_TIME', bytes => 3, decode => 'bcd2num'},
		{name => 'PROMOTIONAL_TARIFF_PLAN_END_TIME', bytes => 3, decode => 'bcd2num'},
		{name => 'EXTENDED_CDR_REFERENCE_NUMBER', bytes => 32, decode => 'ebcdic2ascii'},
		{name => 'PRE_UC_STOPPAGE_TYPE', bytes => 6, decode => 'bcd2num'},
		{name => 'POST_UC_STOPPAGE_TYPE', bytes => 6, decode => 'bcd2num'},
		{name => 'UC_STOPPAGE_TOGGLE_INDICATOR', bytes => 6, decode => 'bcd2num'},
		{name => 'REASON_CODE_4', bytes => 7, decode => 'bcd2num'},
		{name => 'ACCESS_POINT', bytes => 128, decode => 'ebcdic2ascii'},
		{name => 'FAMILY_GROUP_TARIFF_PLAN_COSP_ID', bytes => 3, decode => 'bcd2num'},
		{name => 'FAMILY_GROUP_SERVICE_DATA_1', bytes => 6, decode => 'bcd2num'},
		{name => 'FAMILY_GROUP_SERVICE_DATA_2', bytes => 6, decode => 'bcd2num'},
		{name => 'FAMILY_GROUP_SERVICE_DATA_3', bytes => 6, decode => 'bcd2num'},
		{name => 'FAMILY_GROUP_SERVICE_DATA_4', bytes => 6, decode => 'bcd2num'},
		{name => 'FAMILY_GROUP_SERVICE_DATA_5', bytes => 6, decode => 'bcd2num'},
		{name => 'FAMILY_GROUP_SERVICE_DATA_6', bytes => 6, decode => 'bcd2num'},
		{name => 'FAMILY_GROUP_SERVICE_DATA_7', bytes => 6, decode => 'bcd2num'},
		{name => 'FAMILY_GROUP_SERVICE_DATA_8', bytes => 6, decode => 'bcd2num'},
		{name => 'FAMILY_GROUP_SERVICE_DATA_9', bytes => 6, decode => 'bcd2num'},
		{name => 'FAMILY_GROUP_SERVICE_DATA_10', bytes => 6, decode => 'bcd2num'},
		{name => 'APPLIED_FAMILY_GROUP_DISCOUNT_IDS', bytes => 30, decode => 'ebcdic2ascii'},
		{name => 'ENHANCED_ACCESS_TECHNOLOGY_TYPE', bytes => 2, decode => 'bcd2num'},
		{name => 'ACCOUNT_TYPE', bytes => 1, decode => 'bcd2num'},
		{name => 'ROAMING_INDICATOR', bytes => 1, decode => 'bcd2num'},
		{name => 'BAND_LABEL_AMA_CODE', bytes => 5, decode => 'bcd2num'},
		{name => 'CHARGE_SOURCE', bytes => 1, decode => 'bcd2num'},
		{name => 'DELETE_ACTIVE_ONLY', bytes => 1, decode => 'bcd2num'},
		{name => 'ROUNDED_CALL_VOLUME', bytes => 8, decode => 'bcd2num'},
		{name => 'LAST_RECORD_INDICATOR', bytes => 1, decode => 'bcd2num'},
		{name => 'TRIGGER_TYPE', bytes => 2, decode => 'bcd2num'},
		{name => 'APPLIED_FAMILY_GROUP_ID_1', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'APPLIED_FAMILY_GROUP_ID_2', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'APPLIED_FAMILY_GROUP_ID_3', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'APPLIED_FAMILY_GROUP_ID_4', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'APPLIED_FAMILY_GROUP_ID_5', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'APPLIED_FAMILY_GROUP_ID_6', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'APPLIED_FAMILY_GROUP_ID_7', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'APPLIED_FAMILY_GROUP_ID_8', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'APPLIED_FAMILY_GROUP_ID_9', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'APPLIED_FAMILY_GROUP_ID_10', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'APPLIED_FAMILY_DISCOUNT_MEAS', bytes => 6, decode => 'bcd2num'},
		{name => 'GROUP_ID_FOR_APPLIED_TARIFF_PLAN', bytes => 16, decode => 'ebcdic2ascii'},
		{name => 'SLICE_DURATION', bytes => 6, decode => 'bcd2num'},
		{name => 'SLICE_VOLUME', bytes => 6, decode => 'bcd2num'},
		{name => 'LIMIT_NOTIFICATION_TIMESTAMP_1', bytes => 6, decode => 'timestamp2date'},
		{name => 'LIMIT_NOTIFICATION_TIMESTAMP_2', bytes => 6, decode => 'timestamp2date'},
		{name => 'LIMIT_NOTIFICATION_TIMESTAMP_3', bytes => 6, decode => 'timestamp2date'},
		{name => 'LIMIT_NOTIFICATION_TIMESTAMP_4', bytes => 6, decode => 'timestamp2date'},
		{name => 'LIMIT_NOTIFICATION_TIMESTAMP_5', bytes => 6, decode => 'timestamp2date'},
		{name => 'LIMIT_NOTIFICATION_TIMESTAMP_6', bytes => 6, decode => 'timestamp2date'},
		{name => 'LIMIT_NOTIFICATION_TIMESTAMP_7', bytes => 6, decode => 'timestamp2date'},
		{name => 'LIMIT_NOTIFICATION_TIMESTAMP_8', bytes => 6, decode => 'timestamp2date'},
		{name => 'LIMIT_NOTIFICATION_TIMESTAMP_9', bytes => 6, decode => 'timestamp2date'},
		{name => 'LIMIT_NOTIFICATION_TIMESTAMP_10', bytes => 6, decode => 'timestamp2date'},
		{name => 'ASSET_ID_1', bytes => 15, decode => 'ebcdic2ascii'},
		{name => 'ASSET_ID_2', bytes => 15, decode => 'ebcdic2ascii'},
		{name => 'ASSET_ID_3', bytes => 15, decode => 'ebcdic2ascii'},
		{name => 'ASSET_ID_4', bytes => 15, decode => 'ebcdic2ascii'},
		{name => 'ASSET_ID_5', bytes => 15, decode => 'ebcdic2ascii'},
		{name => 'ASSET_ID_6', bytes => 15, decode => 'ebcdic2ascii'},
		{name => 'ASSET_ID_7', bytes => 15, decode => 'ebcdic2ascii'},
		{name => 'ASSET_ID_8', bytes => 15, decode => 'ebcdic2ascii'},
		{name => 'ASSET_ID_9', bytes => 15, decode => 'ebcdic2ascii'},
		{name => 'ASSET_ID_10', bytes => 15, decode => 'ebcdic2ascii'},
		{name => 'CATEGORY_DURATION', bytes => 6, decode => 'bcd2num'},
		{name => 'CATEGORY_START_TIME', bytes => 6, decode => 'timestamp2date'},
		{name => 'BALANCE_BILLING_DATE', bytes => 5, decode => 'bcd2num'},
	];

	# this will make Reader happy when it sets format_fields
	$self->{format} = $CDR;
	$self->{block_header} = $BLOCK_HEADER;
	$self->{record_header} = $RECORD_HEADER;
}

sub getBlockHeaderFormat 
{
	my $self = shift;
	return $self->{block_header};
}

sub getRecordHeaderFormat 
{
	my $self = shift;
	return $self->{record_header};
}

sub getCdrFormat 
{
	my $self = shift;
	return $self->{format};
}

1;
